{"version":3,"sources":["components/Dashboard/Dashboard.js","components/Login/Login.js","components/Preferences/Preferences.js","App.js","useToken.js","reportWebVitals.js","index.js"],"names":["Dashboard","Component","loginUser","credentials","a","fetch","method","mode","headers","body","JSON","stringify","then","data","json","Login","setToken","useState","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","className","onSubmit","type","onChange","target","value","Preferences","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","localStorage","setItem","useToken","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+QAEaA,EAAb,4JACI,WACI,OACI,8BACI,iDAJhB,GAA+BC,a,+CCEhBC,E,8EAAf,WAAyBC,GAAzB,SAAAC,EAAA,+EACWC,MAAM,cACT,CACAC,OAAQ,OACRC,KAAK,UACLC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WAV3B,4C,sBAae,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC5B,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,uCAAG,WAAMC,GAAN,eAAAnB,EAAA,6DACjBmB,EAAEC,iBADe,SAEGtB,EAAU,CAC1BgB,WACAE,aAJa,OAEXK,EAFW,OAMjBT,EAASS,GANQ,2CAAH,sDASlB,OACI,sBAAKC,UAAU,gBAAf,UACI,+CACA,uBAAMC,SAAUL,EAAhB,UACI,kCACI,yCACA,uBAAOM,KAAK,OAAOC,SAAU,SAAAN,GAAC,OAAIJ,EAAYI,EAAEO,OAAOC,aAE3D,kCACI,yCACA,uBAAOH,KAAK,WAAWC,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOC,aAE/D,8BACI,wBAAQH,KAAK,SAAb,4BCzCb,IAAOI,EAAd,4JACI,WACI,OACI,8BACI,mDAJhB,GAAkC/B,aC+BnBgC,MAzBf,WAEI,MCRW,WACX,IAMA,EAA0BhB,mBANT,WACb,IAAMiB,EAAcC,eAAeC,QAAQ,SACrCC,EAAY3B,KAAK4B,MAAMJ,GAC7B,cAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAWZ,MAGac,IAAnC,mBAAOd,EAAP,KAAcT,EAAd,KAQA,MAAO,CACHA,SAPc,SAAAqB,GACdG,aAAaC,QAAQ,QAAS/B,KAAKC,UAAU0B,IAC7CF,eAAeM,QAAQ,QAAS/B,KAAKC,UAAU0B,IAC/CrB,EAASqB,EAAUZ,QAKnBA,SDTwBiB,GAApBjB,EAAR,EAAQA,MAAOT,EAAf,EAAeA,SAEf,OAAIS,EAKA,sBAAKC,UAAU,UAAf,UACI,6CACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiB,KAAK,aAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,cAZT,cAAC,EAAD,CAAO3B,SAAUA,KEDjB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACH,cAAC,EAAD,IAEJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.051271ef.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nexport class Dashboard extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Dashboard</h2>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\n\r\nasync function loginUser(credentials) {\r\n    return fetch('loginVerify',\r\n        {\r\n        method: 'POST',\r\n        mode:\"no-cors\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    })\r\n        .then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n            username,\r\n            password\r\n        });\r\n        setToken(token);\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-wrapper\">\r\n            <h1>Please Log In</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <p>Username</p>\r\n                    <input type=\"text\" onChange={e => setUserName(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                </label>\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n};","import React, {Component} from \"react\";\r\n\r\nexport class  Preferences extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Preferences</h2>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport {Dashboard} from \"./components/Dashboard/Dashboard\";\nimport Login from \"./components/Login/Login\";\nimport {Preferences} from \"./components/Preferences/Preferences\";\nimport useToken from './useToken';\n\nfunction App() {\n\n    const { token, setToken } = useToken();\n\n    if(!token) {\n        return <Login setToken={setToken} />\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <h1>Application</h1>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/dashboard\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/preferences\">\n                        <Preferences />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n    };\r\n\r\n    const [token, setToken] = useState(getToken());\r\n\r\n    const saveToken = userToken => {\r\n        localStorage.setItem('token', JSON.stringify(userToken));\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n    };\r\n\r\n    return {\r\n        setToken: saveToken,\r\n        token\r\n    }\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n      <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}