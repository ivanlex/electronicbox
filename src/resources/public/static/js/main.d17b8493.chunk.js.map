{"version":3,"sources":["components/Login/Login.js","components/DashPage/DashPage.js","components/Dashboard/Dashboard.js","components/Preferences/Preferences.js","components/DeviceDataTable/DeviceDataTable.js","components/DeviceStatus/DeviceStatus.js","components/DeviceHistoryTable/DeviceHistoryTable.js","components/DeviceHistory/DeviceHistory.js","components/DeviceMaintainTable/DeviceMaintainTable.js","components/DeviceMaintain/DeviceMaintain.js","components/ClippedDrawer/ClippedDrawer.js","App.js","useToken.js","reportWebVitals.js","index.js"],"names":["loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","catch","console","log","Login","setToken","useState","username","setUserName","password","setPassword","openDialog","setOpenDialog","handleSubmit","e","preventDefault","undefined","token","length","handleClose","className","onSubmit","TextField","id","label","variant","onChange","target","value","align","Button","type","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","onClick","DashPage","props","colors","Box","sx","margin","boxShadow","borderRadius","width","height","bgcolor","index","backgroundColor","opacity","title","content","Dashboard","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","Preferences","Component","StyledTableCell","TableCell","tableCellClasses","head","common","black","white","fontSize","StyledTableRow","TableRow","action","hover","border","DeviceDataTable","TableContainer","component","Table","minWidth","TableHead","TableBody","this","rows","map","row","scope","mcuId","openStatus","crackStatus","lightningStatus","groundedStatus","lightningCount","React","DeviceStatus","state","deviceStatus","refreshUtility","self","setState","setInterval","result","clearInterval","DeviceHistoryTable","updatedTime","DeviceHistory","queryDeviceId","deviceHistory","handleQuery","bind","updateInput","deviceId","event","size","DeviceMaintainTable","address","updateDate","startIcon","DeviceMaintain","allDevice","ClippedDrawer","display","CssBaseline","AppBar","position","zIndex","drawer","Toolbar","Typography","noWrap","Drawer","flexShrink","boxSizing","overflow","List","to","ListItem","button","ListItemIcon","Divider","flexGrow","p","path","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","localStorage","setItem","useToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6cAKeA,E,8EAAf,WAAyBC,GAAzB,SAAAC,EAAA,+EACWC,MAAM,cACT,CACAC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBC,OAAM,SAAAF,GAAI,OAAIG,QAAQC,IAAI,cAVnC,4C,sBAae,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC5B,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,uCAAG,WAAMC,GAAN,eAAAvB,EAAA,6DACjBuB,EAAEC,iBADe,SAEG1B,EAAU,CAC1BkB,WACAE,aAJa,YAOJO,KALPC,EAFW,SAO0B,IAAjBA,EAAMC,OAE5BN,GAAc,GAIdP,EAASY,GAbI,2CAAH,sDAiBZE,EAAc,WAChBP,GAAc,IAGlB,OACI,sBAAKQ,UAAU,gBAAf,UACI,4EACA,uBAAMC,SAAUR,EAAhB,UACI,4BACI,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,qBAAMC,QAAQ,WAAWC,SAAU,SAAAZ,GAAC,OAAIN,EAAYM,EAAEa,OAAOC,YAEtG,4BACI,cAACN,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,eAAKC,QAAQ,WAAWC,SAAU,SAAAZ,GAAC,OAAIJ,EAAYI,EAAEa,OAAOC,YAErG,qBAAKC,MAAM,SAAX,SACI,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASN,QAAQ,YAA9B,+BAGR,eAACO,EAAA,EAAD,CACIC,KAAMtB,EACNuB,QAASf,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAMI,cAACgB,EAAA,EAAD,CAAaZ,GAAG,qBAAhB,sCAGA,cAACa,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmBd,GAAG,2BAAtB,0JAIJ,cAACe,EAAA,EAAD,UACI,cAACR,EAAA,EAAD,CAAQS,WAAS,EAACC,QAASrB,EAA3B,kC,8OCpEL,SAASsB,EAASC,GAE7B,IAAMC,EAAS,CAAC,UAAU,UAAU,WAEpC,OACI,cAACC,EAAA,EAAD,CACIC,GAAI,CACAC,OAAQ,EACRC,UAAW,EACXC,aAAc,EACdC,MAAO,IACPC,OAAQ,IACRC,QAASR,EAAOD,EAAMU,MAAST,EAAOzB,QACtC,UAAW,CACPmC,gBAAiB,eACjBC,QAAS,CAAC,GAAK,GAAK,MAVhC,SAcI,gCACI,oBAAIlC,UAAU,gBAAd,SAA+BsB,EAAMa,QACrC,oBAAInC,UAAU,kBAAd,SAAiCsB,EAAMc,e,OCjBxC,SAASC,IACPC,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,eACrBA,EAAMC,WAAWC,OADG,IAEvBC,QAASH,EAAMI,QAAQ,GACvBC,UAAW,SACXC,MAAON,EAAMO,QAAQC,KAAKC,eAJ9B,IAOIjB,EAAQ,EAER,OACI,sBAAKhC,UAAU,iBAAf,UACI,cAAC,EAAD,CAAUgC,MAAOA,IAASG,MAAM,uCAASC,QAAQ,MACjD,cAAC,EAAD,CAAUJ,MAAOA,IAASG,MAAM,2BAAOC,QAAQ,MAC/C,cAAC,EAAD,CAAUJ,MAAOA,IAASG,MAAM,2BAAOC,QAAQ,S,oCCrBjDc,GAAd,4JACI,WACI,OACI,8BACI,mDAJhB,GAAkCC,a,8ECS5BC,I,OAAkBd,YAAOe,KAAPf,EAAkB,kBAAGE,EAAH,EAAGA,MAAH,sCAChCc,KAAiBC,MAAS,CAC5BtB,gBAAiBO,EAAMO,QAAQS,OAAOC,MACtCX,MAAON,EAAMO,QAAQS,OAAOE,QAHM,0BAKhCJ,KAAiB/E,MAAS,CAC5BoF,SAAU,KANwB,MAUpCC,GAAiBtB,YAAOuB,KAAPvB,EAAiB,kBAAgB,CACpD,qBAAsB,CAClBL,gBAFgC,EAAGO,MAEZO,QAAQe,OAAOC,OAG1C,mCAAoC,CAChCC,OAAQ,OAgBHC,GAAb,kDAEI,aAAe,wCAFnB,0CAQI,WACI,OACI,8BACI,sBAAKjE,UAAU,kBAAf,UACI,4EACA,cAACkE,GAAA,EAAD,CAAgBC,UAAW5B,IAA3B,SACI,eAAC6B,GAAA,EAAD,CAAO3C,GAAI,CAAE4C,SAAU,KAAO,aAAW,mBAAzC,UACI,cAACC,GAAA,EAAD,UACI,eAACT,GAAA,EAAD,WACI,cAACT,GAAD,6CACA,cAACA,GAAD,CAAiB3C,MAAM,QAAvB,sCACA,cAAC2C,GAAD,CAAiB3C,MAAM,QAAvB,0CACA,cAAC2C,GAAD,CAAiB3C,MAAM,QAAvB,0CACA,cAAC2C,GAAD,CAAiB3C,MAAM,QAAvB,0CACA,cAAC2C,GAAD,CAAiB3C,MAAM,QAAvB,uDAGR,cAAC8D,GAAA,EAAD,UACKC,KAAKlD,MAAMmD,KAAKC,KAAI,SAACC,GAAD,OACjB,eAACf,GAAD,WACI,cAACR,GAAD,CAAiBe,UAAU,KAAKS,MAAM,MAAtC,SACKD,EAAIE,QAET,cAACzB,GAAD,CAAiB3C,MAAM,QAAvB,SAAkD,GAAlBkE,EAAIG,WAAkB,eAAO,iBAC7D,cAAC1B,GAAD,CAAiB3C,MAAM,QAAvB,SAAmD,GAAnBkE,EAAII,YAAmB,eAAO,iBAC9D,cAAC3B,GAAD,CAAiB3C,MAAM,QAAvB,SAAuD,GAAvBkE,EAAIK,gBAAuB,eAAO,uBAClE,cAAC5B,GAAD,CAAiB3C,MAAM,QAAvB,SAAuD,GAAvBkE,EAAIM,eAAuB,eAAO,iBAClE,cAAC7B,GAAD,CAAiB3C,MAAM,QAAvB,SAAgCkE,EAAIO,mBARnBP,EAAIE,0BA3B7D,GAAqCM,aCtCxBC,GAAb,kDACI,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IACD+D,MAAM,CACPC,aAAa,GACbC,eAAe,IAJJ,EADvB,0CAUI,WACI,OACI,8BACI,8BACI,cAAC,GAAD,CAAiBd,KAAMD,KAAKa,MAAMC,qBAdtD,+BAoBI,WACI,IAAME,EAAMhB,KAEZgB,EAAKC,SAAS,CAACF,eAAiBG,aAAY,WACxC5G,QAAQC,IAAI,mBAEZX,MAAM,YACF,CACIC,OAAQ,OACRC,QAAS,CACL,eAAgB,sBAIvBI,MACG,SAAAC,GAEIA,EAAKC,OAAOF,MAAK,SAASiH,GAEtB7G,QAAQC,IAAI4G,GACZH,EAAKC,SAAS,CACTH,aAAeK,UAQ/B9G,OAAM,SAAAF,GAAI,OAAIG,QAAQC,IAAI,eACjC,SAlDV,kCAqDI,WAEI6G,cAAcpB,KAAKa,MAAME,oBAvDjC,GAAkCJ,IAAMhC,W,SCKlCC,GAAkBd,YAAOe,KAAPf,EAAkB,kBAAGE,EAAH,EAAGA,MAAH,sCAChCc,KAAiBC,MAAS,CAC5BtB,gBAAiBO,EAAMO,QAAQS,OAAOC,MACtCX,MAAON,EAAMO,QAAQS,OAAOE,QAHM,0BAKhCJ,KAAiB/E,MAAS,CAC5BoF,SAAU,KANwB,KAUpCC,GAAiBtB,YAAOuB,KAAPvB,EAAiB,kBAAgB,CACpD,qBAAsB,CAClBL,gBAFgC,EAAGO,MAEZO,QAAQe,OAAOC,OAG1C,mCAAoC,CAChCC,OAAQ,OAgBH6B,GAAb,kDAEI,aAAe,wCAFnB,0CAQI,WACI,OACI,8BACI,qBAAK7F,UAAU,kBAAf,SACI,cAACkE,GAAA,EAAD,CAAgBC,UAAW5B,IAA3B,SACI,eAAC6B,GAAA,EAAD,CAAO3C,GAAI,CAAE4C,SAAU,KAAO,aAAW,mBAAzC,UACI,cAACC,GAAA,EAAD,UACI,eAACT,GAAA,EAAD,WACI,cAAC,GAAD,6CACA,cAAC,GAAD,CAAiBpD,MAAM,QAAvB,sCACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,0CACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,0CACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,0CACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,kDACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,+CAGR,cAAC8D,GAAA,EAAD,UACKC,KAAKlD,MAAMmD,KAAKC,KAAI,SAACC,GAAD,OACjB,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBR,UAAU,KAAKS,MAAM,MAAtC,SACKD,EAAIE,QAET,cAAC,GAAD,CAAiBpE,MAAM,QAAvB,SAAkD,GAAlBkE,EAAIG,WAAkB,eAAO,iBAC7D,cAAC,GAAD,CAAiBrE,MAAM,QAAvB,SAAmD,GAAnBkE,EAAII,YAAmB,eAAO,iBAC9D,cAAC,GAAD,CAAiBtE,MAAM,QAAvB,SAAuD,GAAvBkE,EAAIK,gBAAuB,eAAO,uBAClE,cAAC,GAAD,CAAiBvE,MAAM,QAAvB,SAAuD,GAAvBkE,EAAIM,eAAuB,eAAO,iBAClE,cAAC,GAAD,CAAiBxE,MAAM,QAAvB,SAAgCkE,EAAIO,iBACpC,cAAC,GAAD,CAAiBzE,MAAM,QAAvB,SAAgCkE,EAAImB,gBATnBnB,EAAIE,yBA3B7D,GAAwCM,aCrC3BY,I,OAAb,kDAEI,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IACD+D,MAAM,CACPW,cAAc,GACdC,cAAc,IAGlB,EAAKC,YAAe,EAAKA,YAAYC,KAAjB,iBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,iBARJ,EAFvB,+CAaI,WACQ,IAAMX,EAAOhB,KAEb1F,QAAQC,IAAI,wBAA0ByF,KAAKa,MAAMW,eAEjD5H,MAAM,aACF,CACIC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB4H,SAAW7B,KAAKa,MAAMW,kBAG7BtH,MACG,SAAAC,GAEIA,EAAKC,OAAOF,MAAK,SAASiH,GAEtB7G,QAAQC,IAAI4G,GACZH,EAAKC,SAAS,CACVQ,cAAgBN,UAQ/B9G,OAAM,SAAAF,GAAI,OAAIG,QAAQC,IAAI,eA3C3C,yBA8CI,SAAYuH,GACR9B,KAAKiB,SAAS,CACVO,cAAgBM,EAAM/F,OAAOC,QAGjC1B,QAAQC,IAAIyF,KAAKa,MAAMW,iBAnD/B,oBAuDI,WACI,OACI,gCACI,sBAAKhG,UAAU,YAAf,UACI,cAACE,EAAA,EAAD,CAAWC,GAAG,WAAWC,MAAM,iCAAQC,QAAQ,WAAWC,SAAUkE,KAAK4B,cACzE,cAAC1F,EAAA,EAAD,CAAQ6F,KAAK,SAASlG,QAAQ,YAAYe,QAASoD,KAAK0B,YAAxD,6BAGJ,8BACI,cAAC,GAAD,CAAoBzB,KAAMD,KAAKa,MAAMY,yBAhEzD,GAAmCd,IAAMhC,Y,qBCOnCC,GAAkBd,YAAOe,KAAPf,EAAkB,kBAAGE,EAAH,EAAGA,MAAH,sCAChCc,KAAiBC,MAAS,CAC5BtB,gBAAiBO,EAAMO,QAAQS,OAAOC,MACtCX,MAAON,EAAMO,QAAQS,OAAOE,QAHM,0BAKhCJ,KAAiB/E,MAAS,CAC5BoF,SAAU,KANwB,KAUpCC,GAAiBtB,YAAOuB,KAAPvB,EAAiB,kBAAgB,CACpD,qBAAsB,CAClBL,gBAFgC,EAAGO,MAEZO,QAAQe,OAAOC,OAG1C,mCAAoC,CAChCC,OAAQ,OAgBHwC,GAAb,kDAEI,aAAe,wCAFnB,0CAQI,WACI,OACI,8BACI,qBAAKxG,UAAU,kBAAf,SACI,cAACkE,GAAA,EAAD,CAAgBC,UAAW5B,IAA3B,SACI,eAAC6B,GAAA,EAAD,CAAO3C,GAAI,CAAE4C,SAAU,KAAO,aAAW,mBAAzC,UACI,cAACC,GAAA,EAAD,UACI,eAACT,GAAA,EAAD,WACI,cAAC,GAAD,6CACA,cAAC,GAAD,CAAiBpD,MAAM,QAAvB,0CACA,cAAC,GAAD,CAAiBA,MAAM,QAAvB,0CACA,cAAC,GAAD,CAAiBA,MAAM,eAG/B,cAAC8D,GAAA,EAAD,UACKC,KAAKlD,MAAMmD,KAAKC,KAAI,SAACC,GAAD,OACjB,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBR,UAAU,KAAKS,MAAM,MAAtC,SACKD,EAAIE,QAET,cAAC,GAAD,CAAiBpE,MAAM,QAAvB,SAAgCkE,EAAI8B,UACpC,cAAC,GAAD,CAAiBhG,MAAM,QAAvB,SAAgCkE,EAAI+B,aACpC,cAAC,GAAD,CAAiBjG,MAAM,QAAvB,SACI,cAACC,EAAA,EAAD,CAAQ6F,KAAK,QAAQlG,QAAQ,YAAYsG,UAAW,cAAC,KAAD,IAApD,8BAPahC,EAAIE,yBAxB7D,GAAyCM,aCvC5ByB,GAAb,kDACI,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IACD+D,MAAM,CACPwB,UAAU,IAHC,EADvB,0CASI,WACI,OACI,gCACI,sBAAK7G,UAAU,YAAf,UACI,cAACE,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,iCAAQC,QAAQ,aACrD,cAACH,EAAA,EAAD,CAAWC,GAAG,kBAAkBC,MAAM,2BAAOC,QAAQ,aACrD,cAACK,EAAA,EAAD,CAAQ6F,KAAK,SAASlG,QAAQ,YAA9B,6BAGJ,8BACI,cAAC,GAAD,CAAqBoE,KAAMD,KAAKa,MAAMwB,qBAnB1D,GAAoC1B,IAAMhC,W,OCwB3B,SAAS2D,KACpB,OACI,cAAC,IAAD,UACA,eAACtF,EAAA,EAAD,CAAKC,GAAI,CAAEsF,QAAS,QAApB,UACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQzF,GAAI,CAAE0F,OAAQ,SAAC3E,GAAD,OAAWA,EAAM2E,OAAOC,OAAS,IAAxE,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYjH,QAAQ,KAAKkH,QAAM,EAACpD,UAAU,MAA1C,wEAKR,eAACqD,EAAA,EAAD,CACInH,QAAQ,YACRoB,GAAE,aACEI,MAjBA,IAkBA4F,WAAY,GAFd,qBAG0B,CAAE5F,MAnB1B,IAmB8C6F,UAAW,eALjE,UAQI,cAACL,EAAA,EAAD,IACA,eAAC7F,EAAA,EAAD,CAAKC,GAAI,CAAEkG,SAAU,QAArB,UACI,cAACC,EAAA,EAAD,CAAM5H,UAAU,WAAhB,SACI,cAAC,IAAD,CAAM6H,GAAG,aAAT,SACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAFR,uBAAqB,iBAQ7B,cAACC,EAAA,EAAD,IACA,eAACL,EAAA,EAAD,CAAM5H,UAAU,WAAhB,UACI,cAAC,IAAD,CAAM6H,GAAG,gBAAT,SACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAFR,6BAAqB,qBAOzB,cAAC,IAAD,CAAMH,GAAG,iBAAT,SACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAFR,yCAAqB,4BAQ7B,cAACC,EAAA,EAAD,IACA,eAACL,EAAA,EAAD,CAAM5H,UAAU,WAAhB,UACI,cAAC,IAAD,CAAO6H,GAAG,kBAAV,SACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAFR,6BAAqB,kBAOzB,eAACF,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAFR,iBAAqB,mBASjC,cAACxG,EAAA,EAAD,CAAKxB,UAAU,qBAAqBmE,UAAU,OAAO1C,GAAI,CAAEyG,SAAU,EAAGC,EAAG,GAA3E,SACQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,gBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC/F,EAAD,MAEJ,cAAC,IAAD,CAAO+F,KAAK,eAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC/F,EAAD,gBC/FbgG,OAff,WAEI,MCPW,WACX,IAMA,EAA0BnJ,mBANT,WACb,IAAMoJ,EAAcC,eAAeC,QAAQ,SACrCC,EAAYjK,KAAKkK,MAAMJ,GAC7B,cAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAW5I,MAGa8I,IAAnC,mBAAO9I,EAAP,KAAcZ,EAAd,KAQA,MAAO,CACHA,SAPc,SAAAwJ,GACdG,aAAaC,QAAQ,QAASrK,KAAKC,UAAUgK,IAC7CF,eAAeM,QAAQ,QAASrK,KAAKC,UAAUgK,IAC/CxJ,EAASwJ,EAAU5I,QAKnBA,SDVwBiJ,GAApBjJ,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,SAEf,OAAGY,EACQ,cAAC,EAAD,CAAOZ,SAAUA,IAIxB,qBAAKe,UAAU,UAAf,SACI,cAAC,GAAD,OELG+I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvK,MAAK,YAAkD,IAA/CwK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACH,cAAC,GAAD,IAEJC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.d17b8493.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField} from \"@mui/material\";\r\n\r\nasync function loginUser(credentials) {\r\n    return fetch('loginVerify',\r\n        {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n    })\r\n        .then(data => data.json())\r\n        .catch(data => console.log(\"failed\"));\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n            username,\r\n            password\r\n        });\r\n\r\n        if(token === undefined || token.length === 0)\r\n        {\r\n            setOpenDialog(true);\r\n        }\r\n        else\r\n        {\r\n            setToken(token);\r\n        }\r\n    }\r\n\r\n    const handleClose = () =>{\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-wrapper\">\r\n            <h1>请输入用户凭证</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>\r\n                    <TextField id=\"outlined-basic\" label=\"用户名\" variant=\"outlined\" onChange={e => setUserName(e.target.value)} />\r\n                </p>\r\n                <p>\r\n                    <TextField id=\"outlined-basic\" label=\"密码\" variant=\"outlined\" onChange={e => setPassword(e.target.value)} />\r\n                </p>\r\n                <div align=\"center\">\r\n                    <Button type=\"submit\" variant=\"contained\">登录</Button>\r\n                </div>\r\n            </form>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    验证失败\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        用户名或密码不争确，请确认用户名密码的大小写。\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        好的\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n};","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {ListItem} from \"@mui/material\";\r\nimport \"./DashPage.css\"\r\n\r\nexport default function DashPage(props)\r\n{\r\n    const colors = ['#00D0C2','#4C71F0','#F0854C'];\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                margin: 2,\r\n                boxShadow: 8,\r\n                borderRadius: 3,\r\n                width: 200,\r\n                height: 200,\r\n                bgcolor: colors[props.index  % colors.length],\r\n                '&:hover': {\r\n                    backgroundColor: 'primary.main',\r\n                    opacity: [0.9, 0.8, 0.7],\r\n                },\r\n            }}\r\n        >\r\n            <div>\r\n                <h1 className=\"dashPageTitle\">{props.title}</h1>\r\n                <h2 className=\"dashPageContent\">{props.content}</h2>\r\n            </div>\r\n        </Box>\r\n    )\r\n\r\n\r\n}","import React, {Component} from \"react\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AltRouteIcon from '@mui/icons-material/AltRoute';\r\nimport {Grid} from \"@mui/material\";\r\nimport DashPage from \"../DashPage/DashPage\";\r\nimport \"./DashBoard.css\"\r\n\r\nexport default function Dashboard(){\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n\r\n    let index = 0;\r\n\r\n        return (\r\n            <div className=\"dashBoardLine1\">\r\n                <DashPage index={index++} title=\"安装设备数量\" content=\"1\"/>\r\n                <DashPage index={index++} title=\"在线设备\" content=\"1\"/>\r\n                <DashPage index={index++} title=\"离线设备\" content=\"1\"/>\r\n            </div>\r\n        );\r\n}","import React, {Component} from \"react\";\r\n\r\nexport class  Preferences extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Preferences</h2>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport \"./DeviceDataTable.css\"\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\n// function createData(mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount) {\r\n//     return { mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount };\r\n// }\r\n\r\n// const rows = [\r\n//     createData('Dev001', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev002', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev003', '分闸', '裂化', '有雷击', '正常', 2),\r\n//     createData('Dev004', '合闸', '裂化', '正常', '报警', 2),\r\n//     createData('Dev005', '合闸', '裂化', '正常', '报警', 2),\r\n// ];\r\n\r\nexport class DeviceDataTable extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DeviceDataTable\">\r\n                    <h2>设备状态一览表</h2>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>设备识别码</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">空开状态</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">裂化状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">雷击状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">接地状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">雷击次数&nbsp;(次)</StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.props.rows.map((row) => (\r\n                                    <StyledTableRow key={row.mcuId}>\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.mcuId}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.openStatus == 0 ? \"分闸\" : \"合闸\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.crackStatus == 0 ? \"正常\" : \"裂化\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.lightningStatus == 0 ? \"正常\" : \"有雷击\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.groundedStatus  == 0 ? \"正常\" : \"报警\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.lightningCount}</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Axios} from \"axios\";\r\nimport {DeviceDataTable} from \"../DeviceDataTable/DeviceDataTable\";\r\n\r\n\r\nexport class DeviceStatus extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            deviceStatus:[],\r\n            refreshUtility:\"\"\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <DeviceDataTable rows={this.state.deviceStatus} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const self =this;\r\n\r\n        self.setState({refreshUtility : setInterval(function (){\r\n            console.log(\"refresh running\");\r\n\r\n            fetch('mCUOpInfo',\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/text'\r\n                    },\r\n                    // body: JSON.stringify(credentials)\r\n                })\r\n                .then(\r\n                    data=>{\r\n\r\n                        data.json().then(function(result) {\r\n                            // here you can use the result of promiseB\r\n                            console.log(result);\r\n                            self.setState({\r\n                                 deviceStatus : result\r\n                            })\r\n                        })\r\n\r\n\r\n\r\n                    }\r\n                )\r\n                .catch(data => console.log(\"failed\"));\r\n        },3000)})\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        clearInterval(this.state.refreshUtility);\r\n    }\r\n\r\n\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\n// function createData(mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount) {\r\n//     return { mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount };\r\n// }\r\n\r\n// const rows = [\r\n//     createData('Dev001', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev002', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev003', '分闸', '裂化', '有雷击', '正常', 2),\r\n//     createData('Dev004', '合闸', '裂化', '正常', '报警', 2),\r\n//     createData('Dev005', '合闸', '裂化', '正常', '报警', 2),\r\n// ];\r\n\r\nexport class DeviceHistoryTable extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DeviceDataTable\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>设备识别码</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">空开状态</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">裂化状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">雷击状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">接地状态&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">雷击次数&nbsp;(次)</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">更新日期&nbsp;</StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.props.rows.map((row) => (\r\n                                    <StyledTableRow key={row.mcuId}>\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.mcuId}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.openStatus == 0 ? \"分闸\" : \"合闸\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.crackStatus == 0 ? \"正常\" : \"裂化\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.lightningStatus == 0 ? \"正常\" : \"有雷击\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.groundedStatus  == 0 ? \"正常\" : \"报警\"}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.lightningCount}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.updatedTime}</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {DeviceHistoryTable} from \"../DeviceHistoryTable/DeviceHistoryTable\";\r\nimport {Button, TextField} from \"@mui/material\";\r\nimport \"./DeviceHistory.css\"\r\n\r\nexport class DeviceHistory extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            queryDeviceId:\"\",\r\n            deviceHistory:[]\r\n        };\r\n\r\n        this.handleQuery =  this.handleQuery.bind(this);\r\n        this.updateInput = this.updateInput.bind(this);\r\n    }\r\n\r\n    handleQuery(){\r\n            const self = this;\r\n\r\n            console.log(\"query device history \" + this.state.queryDeviceId);\r\n\r\n            fetch('mcuHistory',\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        deviceId : this.state.queryDeviceId\r\n                    })\r\n                })\r\n                .then(\r\n                    data=>{\r\n\r\n                        data.json().then(function(result) {\r\n                            // here you can use the result of promiseB\r\n                            console.log(result);\r\n                            self.setState({\r\n                                deviceHistory : result\r\n                            })\r\n                        })\r\n\r\n\r\n\r\n                    }\r\n                )\r\n                .catch(data => console.log(\"failed\"));\r\n    }\r\n\r\n    updateInput(event){\r\n        this.setState({\r\n            queryDeviceId : event.target.value\r\n        });\r\n\r\n        console.log(this.state.queryDeviceId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"queryLine\">\r\n                    <TextField id=\"deviceId\" label=\"设备识别码\" variant=\"outlined\" onChange={this.updateInput}  />\r\n                    <Button size=\"medium\" variant=\"contained\" onClick={this.handleQuery}>查询</Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <DeviceHistoryTable rows={this.state.deviceHistory} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {Button} from \"@mui/material\";\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\n// function createData(mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount) {\r\n//     return { mcuId, openStatus, crackStatus, groundedStatus, lightningStatus,lightningCount };\r\n// }\r\n\r\n// const rows = [\r\n//     createData('Dev001', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev002', '分闸', '正常', '有雷击', '正常', 2),\r\n//     createData('Dev003', '分闸', '裂化', '有雷击', '正常', 2),\r\n//     createData('Dev004', '合闸', '裂化', '正常', '报警', 2),\r\n//     createData('Dev005', '合闸', '裂化', '正常', '报警', 2),\r\n// ];\r\n\r\nexport class DeviceMaintainTable extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"DeviceDataTable\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell>设备识别码</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">安装地址&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">更新日期&nbsp;</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\"/>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.props.rows.map((row) => (\r\n                                    <StyledTableRow key={row.mcuId}>\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.mcuId}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.address}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.updateDate}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">\r\n                                            <Button size=\"small\" variant=\"contained\" startIcon={<HighlightOffIcon />}>删除</Button>\r\n                                        </StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, TextField} from \"@mui/material\";\r\nimport {DeviceHistoryTable} from \"../DeviceHistoryTable/DeviceHistoryTable\";\r\nimport {DeviceMaintainTable} from \"../DeviceMaintainTable/DeviceMaintainTable\";\r\n\r\nexport class DeviceMaintain extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            allDevice:[]\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"queryLine\">\r\n                    <TextField id=\"outlined-basic\" label=\"设备识别码\" variant=\"outlined\" />\r\n                    <TextField id=\"outlined-basic2\" label=\"安装位置\" variant=\"outlined\" />\r\n                    <Button size=\"medium\" variant=\"contained\">新增</Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <DeviceMaintainTable rows={this.state.allDevice} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport {ListItem, ListItemIcon} from \"@mui/material\";\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\r\n\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ContactMailIcon from '@mui/icons-material/ContactMail';\r\nimport RouterIcon from '@mui/icons-material/Router';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\n\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport {Preferences} from \"../Preferences/Preferences\";\r\nimport {DeviceStatus} from \"../DeviceStatus/DeviceStatus\";\r\nimport {DeviceHistory} from \"../DeviceHistory/DeviceHistory\";\r\nimport {DeviceMaintain} from \"../DeviceMaintain/DeviceMaintain\";\r\n\r\nimport \"./ClippedDrawer.css\"\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function ClippedDrawer() {\r\n    return (\r\n        <BrowserRouter>\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        防雷箱监测控制系统\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                sx={{\r\n                    width: drawerWidth,\r\n                    flexShrink: 0,\r\n                    [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n                }}\r\n            >\r\n                <Toolbar />\r\n                <Box sx={{ overflow: 'auto' }}>\r\n                    <List className=\"drawList\">\r\n                        <Link to=\"/dashboard\">\r\n                            <ListItem button key=\"dashboard\">\r\n                                <ListItemIcon>\r\n                                    <AdminPanelSettingsIcon />\r\n                                </ListItemIcon>\r\n                                主面板\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    <Divider />\r\n                    <List className=\"drawList\">\r\n                        <Link to=\"/deviceStatus\">\r\n                            <ListItem button key=\"allDeviceStatus\">\r\n                                <ListItemIcon>\r\n                                    <RouterIcon />\r\n                                </ListItemIcon>\r\n                                设备状态\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/deviceHistory\">\r\n                            <ListItem button key=\"historyDeviceStatus\">\r\n                                <ListItemIcon>\r\n                                    <HistoryIcon />\r\n                                </ListItemIcon>\r\n                                设备历史查询\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    <Divider />\r\n                    <List className=\"drawList\">\r\n                        <Link  to=\"/deviceMaintain\">\r\n                            <ListItem button key=\"userMaintain\">\r\n                                <ListItemIcon>\r\n                                    <ContactMailIcon />\r\n                                </ListItemIcon>\r\n                                设备管理\r\n                            </ListItem>\r\n                        </Link>\r\n                        <ListItem button key=\"logout\">\r\n                            <ListItemIcon>\r\n                                <LogoutIcon />\r\n                            </ListItemIcon>\r\n                            退出\r\n                        </ListItem>\r\n                    </List>\r\n                </Box>\r\n            </Drawer>\r\n            <Box className=\"contentPlaceHolder\" component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n                    <Switch>\r\n                        <Route path=\"/deviceStatus\">\r\n                            <DeviceStatus />\r\n                        </Route>\r\n                        <Route path=\"/dashboard\">\r\n                            <Dashboard />\r\n                        </Route>\r\n                        <Route path=\"/preferences\">\r\n                            <Preferences />\r\n                        </Route>\r\n                        <Route path=\"/deviceHistory\">\r\n                            <DeviceHistory />\r\n                        </Route>\r\n                        <Route path=\"/deviceMaintain\">\r\n                            <DeviceMaintain />\r\n                        </Route>\r\n                        <Route path=\"*\">\r\n                            <Dashboard />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n            </Box>\r\n        </Box>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\n\nimport './App.css';\nimport Login from \"./components/Login/Login\";\nimport useToken from './useToken';\nimport ClippedDrawer from \"./components/ClippedDrawer/ClippedDrawer\";\n\nfunction App() {\n\n    const { token, setToken } = useToken();\n\n    if(token) {\n        return <Login setToken={setToken} />\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <ClippedDrawer />\n        </div>\n    );\n}\n\nexport default App;","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n    };\r\n\r\n    const [token, setToken] = useState(getToken());\r\n\r\n    const saveToken = userToken => {\r\n        localStorage.setItem('token', JSON.stringify(userToken));\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n    };\r\n\r\n    return {\r\n        setToken: saveToken,\r\n        token\r\n    }\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n      <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}